# -*- coding: utf-8 -*-
"""Task 1 _Code Case.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vqMEp0uUSETBq5CHAyLy9knzhsuazXAi

Stock Price Prediction for 6 months
"""

#import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import yfinance as yf

#load data
dataset = yf.download('AAPL', start='2023-1-1', end='2023-6-1')

#print data file

print(dataset)

# make independent variable
dataset['High-Low']=dataset['High']-dataset['Low']
dataset['Open-Close']=dataset['Open']-dataset['Close']

#store independent variables
x=dataset[['Open-Close','High-Low','Close']]

print(x)

#store target variable
y=np.where(dataset.Close.shift(-1) > dataset.Close , 1, 0)

print(y)

#persentage to split data
persentage_split=0.9
row=int(dataset.shape[0]*persentage_split)

#train
x_train=x[:row]
y_train=y[:row]

#test
x_test=x[row:]
y_test=y[row:]

print(x)

print(x_train)

print(x_test)

#build our model

!pip install sklearn
from sklearn.svm import SVC
model=SVC()
model.fit(x_train[['Open-Close','High-Low']], y_train)

# score train
model.score(x_train[['Open-Close','High-Low']], y_train)

#score test
model.score(x_test[['Open-Close','High-Low']], y_test)

# prediction
dataset['predictions']=model.predict(x[['Open-Close','High-Low']])
print(dataset['predictions'])

#todays inputs
dataset['In']=dataset['Close'].pct_change(1)
print(dataset['In'])

#future inputs
dataset['Future']=dataset['predictions'].shift(1)*dataset['In']
print(dataset['Future'])

# sum today
dataset['sum_In_data']=dataset['In'].cumsum()
# sum future
dataset['sum_Future_data']=dataset['Future'].cumsum()

#plotting
plt.figure(figsize=(10,8))
plt.title('Inputs')
plt.plot(dataset['sum_In_data'],color='blue',label='Today Returns')
plt.plot(dataset['sum_Future_data'],color='red',label='Future Returns')
plt.xticks(rotation = 45)
plt.legend()
plt.show()